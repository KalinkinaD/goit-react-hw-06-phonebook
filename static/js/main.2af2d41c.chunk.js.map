{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactList/ContactListElem/ContactListElem.module.css","components/Logo/Logo.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListElem/ContactListElem.js","components/ContactList/ContactList.js","Filter.js","components/Logo/Logo.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuid","deleteContact","setFilter","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","contactForm","htmlFor","type","placeholder","onChange","format","mask","disabled","length","Component","connect","contactsActions","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","ownProps","item","contacts","items","find","dispatch","ContactsActions","classes","contactDescr","IconButton","aria-label","onClick","fontSize","itemMove","enter","enterActive","exit","exitActive","filter","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","mapDispatchToProps","onChangeFilter","logoStyles","appear","appearActive","Logo","in","unmountOnExit","App","createReducer","ContactActions","action","alert","combineReducers","rootReducer","Reducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2af2d41c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__bHtYA\",\"enterActive\":\"ContactList_enterActive__2_WJf\",\"exit\":\"ContactList_exit__205i0\",\"exitActive\":\"ContactList_exitActive__vIi5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListElem_contact__1uW28\",\"contactDescr\":\"ContactListElem_contactDescr__UiYk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__31pLX\",\"appear\":\"Logo_appear__1Ngl1\",\"appearActive\":\"Logo_appearActive__1_nMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__V5pZk\"};","import { v4 as uuid } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n// import contactsActionTypes from \"../types\";\r\n\r\nconst addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    contact: { id: uuid(), name: name, number: number },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contact/delete\");\r\nconst setFilter = createAction(\"contact/filter\");\r\n\r\n// const deleteContact = (contactId) => ({\r\n//   type: contactsActionTypes.DELETE,\r\n//   payload: { id: contactId },\r\n// });\r\n\r\n// const setFilter = (filter) => ({\r\n//   type: contactsActionTypes.SET_FILTER,\r\n//   payload: { filter },\r\n// });\r\n\r\n// const showAlert = (message) => ({\r\n//   type: contactsActionTypes.SET_FILTER,\r\n//   payload: {\r\n//     message,\r\n//   },\r\n// });\r\n\r\nexport default { addContact, deleteContact, setFilter };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label htmlFor=\"nameInput\">\r\n          Name:\r\n          <br />\r\n          <input\r\n            className=\"FormInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"numberInput\">\r\n          Number:\r\n          <br />\r\n          <NumberFormat\r\n            className=\"FormInput\"\r\n            format=\"(###) ###-####\"\r\n            mask=\"\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { onSubmit: contactsActions.addContact })(\r\n  ContactForm\r\n);\r\n","import React from \"react\";\r\nimport styles from \"./ContactListElem.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsActions from \"../../../redux/contacts/contactsActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ContactListElem = ({ name, number, deleteContact }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <li className={styles.contact}>\r\n      <p className={styles.contactDescr}>\r\n        {name}: {number}\r\n      </p>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        className={classes.margin}\r\n        type=\"button\"\r\n        onClick={deleteContact}\r\n      >\r\n        <DeleteIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find((item) => item.id === ownProps.id);\r\n\r\n  return {\r\n    ...item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(ContactsActions.deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListElem);\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport ContactListElem from \"./ContactListElem/ContactListElem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst itemMove = {\r\n  enter: styles.enter,\r\n  enterActive: styles.enterActive,\r\n  exit: styles.exit,\r\n  exitActive: styles.exitActive,\r\n};\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={itemMove}>\r\n          <ContactListElem id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  ),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"./redux/contacts/contactsActions\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form className=\"FilterForm\">\r\n      <label htmlFor=\"filterInput\">\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          value={value}\r\n          name=\"filter\"\r\n          className=\"FilterInput\"\r\n          placeholder=\"start typing searching name...\"\r\n          // id=\"filterInput\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.setFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Logo.module.css\";\r\n\r\nconst logoStyles = {\r\n  appear: styles.appear,\r\n  appearActive: styles.appearActive,\r\n};\r\nexport const Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames={logoStyles}\r\n      unmountOnExit\r\n    >\r\n      <h1>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\n/* <span role=\"img\" aria-label=\"TELEPHONE\">\r\n☎️\r\n</span> */\r\n","import React from \"react\";\n// import { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./Filter\";\nimport { Logo } from \"./components/Logo/Logo\";\n\n// import { toast, Zoom } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// const contacts = [\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n// ];\nexport default function App() {\n  return (\n    <div className=\"Wrapper\">\n      <Logo />\n      <ContactForm />\n      <h2 className=\"Title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\");\n\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = (contact) => {\n//     const newName = contact.name;\n//     const names = this.state.contacts.map((contact) =>\n//       contact.name.toLowerCase()\n//     );\n//     if (names.includes(newName.toLowerCase().trim())) {\n//       toast.configure();\n//       toast.error(`${newName} is already in contact list`, {\n//         position: toast.POSITION.TOP_CENTER,\n//         autoClose: 8000,\n//         delay: 200,\n//         transition: Zoom,\n//       });\n//     } else {\n//       this.setState((state) => ({\n//         contacts: [...state.contacts, contact],\n//       }));\n//     }\n//   };\n\n//   removeContact = (id) => {\n//     const { contacts } = this.state;\n//     const updatedContacts = contacts.filter((contact) => contact.id !== id);\n//     this.setState({\n//       contacts: [...updatedContacts],\n//     });\n//   };\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   filterContactsByName = () => {\n//     const { contacts, filter } = this.state;\n//     if (contacts.length) {\n//       return contacts.filter((contact) =>\n//         contact.name.toLowerCase().includes(filter.toLowerCase())\n//       );\n//     }\n//   };\n\n//   render() {\n//     const { contacts } = this.state;\n//     return (\n//       <div className=\"Wrapper\">\n//         <Logo />\n//         <ContactForm addContact={this.addContact} />\n//         <h2 className=\"Title\">Contacts</h2>\n//         {contacts.length > 1 && <Filter onChange={this.handleChange} />}\n//         {contacts.length ? (\n//           <ContactList\n//             contacts={this.filterContactsByName()}\n//             onDelete={this.removeContact}\n//           />\n//         ) : (\n//           <p>No contacts in your list!</p>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport ContactActions from \"./contactsActions\";\r\n\r\nconst onAdd = (state, action) => {\r\n  if (\r\n    state &&\r\n    state.find((contact) => action.payload.contact.name === contact.name)\r\n  ) {\r\n    alert(\"Ops! This contact is in your list already!\");\r\n  } else {\r\n    return [...state, action.payload.contact];\r\n  }\r\n};\r\n\r\nconst onDelete = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [ContactActions.addContact]: onAdd,\r\n  [ContactActions.deleteContact]: onDelete,\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [ContactActions.setFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n//without toolkit\r\n// import actionTypes from \"../types\";\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       if (\r\n//         state &&\r\n//         state.find((contact) => payload.contact.name === contact.name)\r\n//       ) {\r\n//         alert(\"Ops, you already have number with such name\");\r\n//         return state;\r\n//       } else {\r\n//         return [...state, payload.contact];\r\n//       }\r\n\r\n//     case actionTypes.DELETE:\r\n//       return state.filter((contact) => contact.id !== payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.SET_FILTER:\r\n//       return payload.filter;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const rootReducer = combineReducers({\r\n//   items,\r\n//   filter,\r\n// });\r\n\r\n// export default rootReducer;\r\n\r\n//если с кнопки убрать disabled={!name.length || !number.length}, можно прописать условие\r\n// else if (\r\n//   action.payload.contact.name === \"\" ||\r\n//   action.payload.contact.number === \"\"\r\n// ) {\r\n//   alert(`Please, field all fields`);\r\n//   return state;\r\n// }\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport Reducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: Reducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n\r\n//without toolkit\r\n// import { createStore } from \"redux\";\r\n// import rootReducer from \"./contacts/contactsReducer\";\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\n// export default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}